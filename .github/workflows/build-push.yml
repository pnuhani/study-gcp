on:

  push:
    branches:
      - master  # Trigger the workflow when a commit is pushed to the 'main' branch

  workflow_dispatch:  # Allows manual triggering of the workflow from the GitHub UI

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest  # The runner environment (Ubuntu)

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose version

    - name: Set up Google Cloud credentials (OIDC)
      id: gcloud-auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
        create_credentials_file: true
        export_environment_variables: true
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2.1.3
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: 'kubectl'

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker asia-south1-docker.pkg.dev

    - name: Build and Push Images
      run: |
        # Build and push frontend
        docker build \
          --build-arg VITE_BASE_URL="${{ secrets.VITE_BASE_URL }}" \
          --build-arg VITE_FIREBASE_API_KEY="${{ secrets.VITE_FIREBASE_API_KEY }}" \
          --build-arg VITE_FIREBASE_AUTH_DOMAIN="${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" \
          --build-arg VITE_FIREBASE_PROJECT_ID="${{ secrets.VITE_FIREBASE_PROJECT_ID }}" \
          --build-arg VITE_FIREBASE_STORAGE_BUCKET="${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" \
          --build-arg VITE_FIREBASE_MESSAGING_SENDER_ID="${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" \
          --build-arg VITE_FIREBASE_APP_ID="${{ secrets.VITE_FIREBASE_APP_ID }}" \
          -t asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/qwervego/frontend:latest \
          ./frontend
        docker push asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/qwervego/frontend:latest

        # Build and push backend
        docker build \
          -t asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/qwervego/backend:latest \
          ./backend
        docker push asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/qwervego/backend:latest

    - name: Deploy to Cloud Run (Frontend)
      run: |
        gcloud run deploy frontend \
          --image asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/qwervego/frontend:latest \
          --platform managed \
          --port 8080 \
          --region asia-south1 \
          --allow-unauthenticated

    - name: Deploy to Cloud Run (Backend)
      run: |
        gcloud run deploy backend \
          --image asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/qwervego/backend:latest \
          --platform managed \
          --port 8080 \
          --region asia-south1 \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 1 \
          --max-instances 10 \
          --set-env-vars=FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }},FIREBASE_CREDENTIALS=${{ secrets.FIREBASE_CREDENTIALS }},ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }},ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }},ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }},SMTP_PORT=${{ secrets.SMTP_PORT }},SMTP_EMAIL=${{ secrets.SMTP_EMAIL }},SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} \
          --timeout 300 \
          --allow-unauthenticated
